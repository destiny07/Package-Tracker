// <auto-generated />
using System;
using Blockchainsure.PackageTracker.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Blockchainsure.PackageTracker.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(PackageTrackerDbContext))]
    [Migration("20210708064925_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Blockchainsure.PackageTracker.Domain.Models.Package", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Carrier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Eta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("FromId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("OriginalEta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Raw")
                        .HasColumnType("jsonb");

                    b.Property<Guid?>("ToId")
                        .HasColumnType("uuid");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.HasIndex("ToId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("Blockchainsure.PackageTracker.Domain.Models.PackageActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("PackageId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<DateTime>("StatusDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("StatusDetails")
                        .HasColumnType("text");

                    b.Property<string>("Substatus")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("PackageId");

                    b.ToTable("PackageActivities");
                });

            modelBuilder.Entity("Blockchainsure.PackageTracker.Domain.Models.ShippingAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("Zip")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ShippingAddresses");
                });

            modelBuilder.Entity("Blockchainsure.PackageTracker.Domain.Models.Package", b =>
                {
                    b.HasOne("Blockchainsure.PackageTracker.Domain.Models.ShippingAddress", "From")
                        .WithMany()
                        .HasForeignKey("FromId");

                    b.HasOne("Blockchainsure.PackageTracker.Domain.Models.ShippingAddress", "To")
                        .WithMany()
                        .HasForeignKey("ToId");

                    b.Navigation("From");

                    b.Navigation("To");
                });

            modelBuilder.Entity("Blockchainsure.PackageTracker.Domain.Models.PackageActivity", b =>
                {
                    b.HasOne("Blockchainsure.PackageTracker.Domain.Models.ShippingAddress", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("Blockchainsure.PackageTracker.Domain.Models.Package", "Package")
                        .WithMany("PackageActivities")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("Blockchainsure.PackageTracker.Domain.Models.Package", b =>
                {
                    b.Navigation("PackageActivities");
                });
#pragma warning restore 612, 618
        }
    }
}
